{"version":3,"sources":["components/Form/form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","options","useState","showOptions","setShowOptions","option1","setOption1","option2","setOption2","option3","setOption3","useEffect","className","class","name","onChange","e","target","value","map","option","type","onClick","console","log","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEe,SAASA,IACvB,IAAMC,EAAQ,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,KACnC,EAAmCC,mBAASD,GAA5C,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA2BJ,mBAAS,IAApC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA2BN,mBAAS,IAApC,mBAAOO,EAAP,KAAeC,EAAf,KAIC,OAHDC,qBAAU,WACRP,EAAeH,KACd,CAACI,EAAQE,EAAQE,IAEjB,sBAAKG,UAAU,YAAf,UACI,oBAAIC,MAAM,YAAV,qBACA,iCACI,uBAAOA,MAAM,eAAb,wBADJ,IACmD,uBAC/C,yBAAQC,KAAK,SAASC,SAAU,SAACC,GAAKV,EAAWU,EAAEC,OAAOC,QAA1D,UACI,wBAAQA,MAAM,GAAd,kBACCf,EAAYgB,KAAI,SAACC,GACf,GAAIA,IAAWb,GAAWa,IAAWX,EACpC,OAAQ,wBAAQS,MAAOE,EAAf,SAAwBA,UAIxC,uBAAOP,MAAM,eAAb,wBAVJ,IAUmD,uBAC/C,yBAAQC,KAAK,SAASC,SAAU,SAACC,GAAKR,EAAWQ,EAAEC,OAAOC,QAA1D,UACI,wBAAQA,MAAM,GAAd,kBACCf,EAAYgB,KAAI,SAACC,GACd,GAAIA,IAAWf,GAAWe,IAAWX,EACrC,OAAQ,wBAAQS,MAAOE,EAAf,SAAwBA,UAIxC,uBACA,uBAAOP,MAAM,eAAb,0BApBJ,IAoBqD,uBACjD,yBAAQC,KAAK,SAASC,SAAU,SAACC,GAAKN,EAAWM,EAAEC,OAAOC,QAA1D,UACI,wBAAQA,MAAM,GAAd,kBACCf,EAAYgB,KAAI,SAACC,GACf,GAAIA,IAAWf,GAAWe,IAAWb,EACpC,OAAQ,wBAAQW,MAAOE,EAAf,SAAwBA,UAIxC,uBACA,wBAAQC,KAAK,SAASC,QAAS,WAAKC,QAAQC,IAAInB,EAAQE,EAAQE,IAAUG,UAAU,WAApF,0BChCGa,MARf,WACE,OACE,cAAC,IAAD,UACA,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5B,OCKtB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.439c057c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./form.css\";\r\nexport default function Form() {\r\n const options=['A','B','C','D','E','F']\r\n const [showOptions,setShowOptions]=useState(options)\r\n const [option1,setOption1]=useState('')\r\n const [option2,setOption2]=useState('')\r\n const [option3,setOption3]=useState('')\r\n useEffect(() => {\r\n   setShowOptions(options) \r\n  },[option1,option2,option3])\r\n  return (\r\n    <div className=\"container\">\r\n        <h2 class=\"logo-text\">SAMOORA</h2>\r\n        <form >\r\n            <label class=\"option-label\">Option one</label> <br/>\r\n            <select name=\"option\" onChange={(e)=>{setOption1(e.target.value)}}>\r\n                <option value=\"\">None</option>\r\n                {showOptions.map((option)=>{\r\n                   if (option !== option2 && option !== option3){\r\n                    return (<option value={option}>{option}</option>)}\r\n                })}\r\n            </select>\r\n\r\n            <label class=\"option-label\">Option Two</label> <br />\r\n            <select name=\"option\" onChange={(e)=>{setOption2(e.target.value)}}>\r\n                <option value=\"\">None</option>\r\n                {showOptions.map((option)=>{\r\n                    if (option !== option1 && option !== option3){\r\n                    return (<option value={option}>{option}</option>)}\r\n                })}\r\n            </select>\r\n\r\n            <br/>\r\n            <label class=\"option-label\">Option Three</label> <br />\r\n            <select name=\"option\" onChange={(e)=>{setOption3(e.target.value)}}>\r\n                <option value=\"\">None</option>\r\n                {showOptions.map((option)=>{\r\n                   if (option !== option1 && option !== option2){\r\n                    return (<option value={option}>{option}</option>)}\r\n                })}\r\n            </select>\r\n\r\n            <br/>\r\n            <button type=\"button\" onClick={()=>{console.log(option1,option2,option3)}}className=\"form-btn\">Submit</button>\r\n        </form>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Form from './components/Form/form';\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Route exact path=\"/\" component={Form} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}